---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import dayjs from "dayjs";
import Link from "@components/shared/Link.astro";
import CalendarIcon from "@assets/icons/calendar.svg?raw";
import UserIcon from "@assets/icons/user.svg?raw";

export interface Props {
	post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const url = `/blog/${post.slug}`;
const creationDate = dayjs(post.data.created);

const { Content } = await post.render();

const components = {
	a: Link
};
---

<Link href="/blog/" color="white">&larr; Go back</Link>

<article class="relative mt-2">
	<div class="absolute bg-gray-900 w-[110%] -translate-x-[5%] h-full -z-20 opacity-60 rounded-lg"></div>
	<header>
		{ post.data.image ? (
			<div class="w-[110%] -translate-x-[5%] h-52">
				<Image class="object-cover object-center h-full" src={post.data.image.src} alt={post.data.image.alt} />
			</div>
		) : null }
		<div class="mt-4 pt-4">
			<h1 class="text-4xl font-semibold mt-auto"><Link href={url} color="white">{post.data.title}</Link></h1>
			<div class="flex gap-4 text-gray-200 my-2">
				<p class="flex gap-2"><Fragment set:html={CalendarIcon} /><time datetime={creationDate.toISOString()}>{creationDate.format("DD.MM.YYYY")}</time></p>
				<p class="flex gap-2"><Fragment set:html={UserIcon} /><span>Stanis≈Çaw Nieradko</span></p>
			</div>
		</div>
	</header>
	<main class="mt-4 mb-4 content">
		<Content components={components} />
	</main>
	<footer class="py-4">
		<Link href="/blog/" color="white">&larr; Go back</Link>
	</footer>
</article>

